package com.kaustubh.ecommerce;import android.app.ProgressDialog;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.os.Build;import android.os.Bundle;import android.support.annotation.RequiresApi;import android.support.v4.content.ContextCompat;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.DefaultItemAnimator;import android.support.v7.widget.GridLayoutManager;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.view.View;import android.view.Window;import android.view.WindowManager;import android.widget.AdapterView;import android.widget.AutoCompleteTextView;import android.widget.Button;import android.widget.EditText;import android.widget.Toast;import com.android.volley.DefaultRetryPolicy;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.StringRequest;import com.android.volley.toolbox.Volley;import org.json.JSONArray;import org.json.JSONObject;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;public class Enquiry extends AppCompatActivity {    EditText etEnquiryName, etEnquiryContact, etEnquirySociety, etEnquiryAddress, etEnquiryDesscription;    AutoCompleteTextView etEnquiryAra;    Button btnEnquirySubmit;    Boolean status = true;    String Category, ID;    ProgressDialog myDialog1, myDialog;    StringRequest stringRequest;    SharedPreferences sharedpreferences;    private ArrayList<ProductCategory> areaList = new ArrayList<>();    CustomListAdapter adapter;    String areaId = "";    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_enquiry);        sharedpreferences = getSharedPreferences(commonVariables.mypreference, Context.MODE_PRIVATE);        Window window = this.getWindow();        window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);        window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);        window.setStatusBarColor(ContextCompat.getColor(this,R.color.statusbarcolor));        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        getSupportActionBar().setDisplayShowHomeEnabled(true);        try {            Category = getIntent().getStringExtra("Category");            ID = getIntent().getStringExtra("ID");            setTitle(Category);        } catch (Exception e) {            e.printStackTrace();        }        sendAreaList();        etEnquiryName = (EditText) findViewById(R.id.etEnquiryName);        etEnquiryContact = (EditText) findViewById(R.id.etEnquiryContact);        etEnquirySociety = (EditText) findViewById(R.id.etEnquirySociety);        etEnquiryAddress = (EditText) findViewById(R.id.etEnquiryAddress);        etEnquiryDesscription = (EditText) findViewById(R.id.etEnquiryDesscription);        btnEnquirySubmit = (Button) findViewById(R.id.btnEnquirySubmit);        etEnquiryAra = (AutoCompleteTextView) findViewById(R.id.etEnquiryAra);        btnEnquirySubmit.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                if (validation()) {                    setEtEnquiry();                } else {                    status = true;                }            }        });    }    private List<String> getData(){        List<String> dataList = new ArrayList<String>();        dataList.add("Fashion Men");        dataList.add("Fashion Women");        dataList.add("Baby");        dataList.add("Kids");        dataList.add("Electronics");        dataList.add("Appliance");        dataList.add("Travel");        dataList.add("Bags");        dataList.add("FootWear");        dataList.add("Jewellery");        dataList.add("Sports");        dataList.add("Electrical");        dataList.add("Sports Kids");        return dataList;    }    private AdapterView.OnItemClickListener onItemClickListener =            new AdapterView.OnItemClickListener(){                @Override                public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {                    areaId = areaList.get(i).getId();                    Toast.makeText(Enquiry.this, areaId, Toast.LENGTH_SHORT).show();                }            };    public void setEtEnquiry () {        myDialog1 = commonVariables.showProgressDialog(Enquiry.this, "Uploading ...");        stringRequest = new StringRequest(Request.Method.POST, commonVariables.domain + "Inquiry_Api/add",                new Response.Listener<String>() {                    @Override                    public void onResponse(String response) {                        try {                            JSONObject enqJO = new JSONObject(response);                            String status = enqJO.getString("status");                            if (status.equals("pass")) {                                JSONObject respo = enqJO.getJSONObject("response");                                String message = respo.getString("message");                                String status1 = respo.getString("status");                                Toast.makeText(Enquiry.this, message, Toast.LENGTH_SHORT).show();                                finish();                            } else if (status.equals("false")){                                Toast.makeText(Enquiry.this, "Session Expire. Please login again", Toast.LENGTH_SHORT).show();                                SharedPreferences.Editor editor = sharedpreferences.edit();                                editor.clear();                                editor.commit();                                Intent i = new Intent(Enquiry.this, MainActivity.class);                                startActivity(i);                                System.exit(0);                            } else {                                Toast.makeText(Enquiry.this, "Error", Toast.LENGTH_SHORT).show();                            }                        } catch (Exception e) {                            e.printStackTrace();                        }                        myDialog1.dismiss();                    }                }, new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                myDialog1.dismiss();            }        }) {            @Override            public Map<String, String> getHeaders() {                HashMap<String, String> headers = new HashMap<String, String>();                headers.put("Authorization", "" + sharedpreferences.getString(commonVariables.token, ""));                return headers;            }            @Override            protected Map<String, String> getParams() {                Map<String, String> params = new HashMap<String, String>();                params.put("name", etEnquiryName.getText().toString());                params.put("mobile", etEnquiryContact.getText().toString());                params.put("address", etEnquiryAddress.getText().toString());                params.put("society_name", etEnquirySociety.getText().toString());                params.put("description", etEnquiryDesscription.getText().toString());                params.put("services_id", ID);                params.put("area_id", areaId);                return params;            }        };        stringRequest.setRetryPolicy(new DefaultRetryPolicy(                10000,                3,                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));        RequestQueue requestQueue = Volley.newRequestQueue(Enquiry.this);        requestQueue.getCache().clear();        requestQueue.add(stringRequest);    }    public boolean validation() {        if (etEnquiryName.getText().toString().length() == 0) {            etEnquiryName.setError("Enter Name");            etEnquiryName.requestFocus();            status = false;        }        if (etEnquirySociety.getText().toString().length() == 0) {            etEnquirySociety.setError("Enter Society");            etEnquirySociety.requestFocus();            status = false;        }        if (etEnquiryAddress.getText().toString().length() == 0) {            etEnquiryAddress.setError("Enter Address");            etEnquiryAddress.requestFocus();            status = false;        }        if (etEnquiryDesscription.getText().toString().length() == 0) {            etEnquiryDesscription.setError("Enter Description");            etEnquiryDesscription.requestFocus();            status = false;        }        if (etEnquiryContact.getText().toString().length() != 10) {            etEnquiryContact.setError("Enter valid Mobile Number");            etEnquiryContact.requestFocus();            status = false;        }        if (areaId.equals("")){            etEnquiryAra.setError("Select area from dropdown list");            etEnquiryAra.requestFocus();            status = false;        }        return status;    }    @Override    public boolean onSupportNavigateUp() {        onBackPressed();        return true;    }    @Override    public void onBackPressed() {        finish();    }    public void sendAreaList() {        myDialog = commonVariables.showProgressDialog(Enquiry.this, "Getting Area List ...");        stringRequest = new StringRequest(Request.Method.GET, commonVariables.domain + "Area_Api/list",                new Response.Listener<String>() {                    @Override                    public void onResponse(String response) {                        try {                            JSONObject enqJO = new JSONObject(response);                            String status = enqJO.getString("status");                            if (status.equals("pass")) {                                JSONObject respo = enqJO.getJSONObject("response");                                String message = respo.getString("message");                                String status1 = respo.getString("status");                                if (status1.equals("true")) {                                    JSONObject result = respo.getJSONObject("result");                                    JSONArray inquiry = result.getJSONArray("area");                                    for (int i = 0; i < inquiry.length(); i++) {                                        JSONObject curr = inquiry.getJSONObject(i);                                        String id = curr.getString("id");                                        String name = curr.getString("name");                                        String description = curr.getString("description");                                        ProductCategory user = new ProductCategory();                                        user.setId(id);                                        user.setTitle(name);                                        user.setTitle(description);                                        areaList.add(user);                                        adapter = new CustomListAdapter(Enquiry.this, android.R.layout.simple_dropdown_item_1line, areaList);                                        etEnquiryAra.setAdapter(adapter );                                        etEnquiryAra.setOnItemClickListener(onItemClickListener);                                    }                                } else {                                    Toast.makeText(Enquiry.this, "No Record Found", Toast.LENGTH_SHORT).show();                                }                            } else {                                Toast.makeText(Enquiry.this, "Record Not Found", Toast.LENGTH_SHORT).show();                            }                            myDialog.dismiss();                        } catch (Exception e) {                            e.printStackTrace();                        }                        myDialog.dismiss();                    }                }, new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                Toast.makeText(Enquiry.this, error.getMessage(), Toast.LENGTH_SHORT).show();                myDialog.dismiss();            }        }) {            @Override            public Map<String, String> getHeaders() {                HashMap<String, String> headers = new HashMap<String, String>();                headers.put("Authorization", "" + sharedpreferences.getString(commonVariables.token, ""));                return headers;            }        };        stringRequest.setRetryPolicy(new DefaultRetryPolicy(                10000,                3,                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));        RequestQueue requestQueue = Volley.newRequestQueue(Enquiry.this);        requestQueue.add(stringRequest);    }}